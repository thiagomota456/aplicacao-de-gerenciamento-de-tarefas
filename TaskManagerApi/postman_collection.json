{
	"info": {
		"_postman_id": "31141e73-b191-4ac5-90a0-dc5d6b898b11",
		"name": "TaskManagerApi",
		"description": "Auth (register/login) + CRUD de tarefas e categorias. Usa accessToken/userId do /auth/login.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14942971"
	},
	"item": [
		{
			"name": "Auth - Register",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin12345\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/auth/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth - Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Login retornou 200', function () { pm.response.to.have.status(200); });",
							"try {",
							"  var b = pm.response.json();",
							"  var token = b.accessToken || b.AccessToken;",
							"  var uid   = b.userId || b.UserId;",
							"  if (token) pm.collectionVariables.set('accessToken', token);",
							"  if (uid) pm.collectionVariables.set('userId', String(uid));",
							"} catch(e) {}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin12345\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar tarefas",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/tasks?CategoryId={{CategoryId}}&IsCompleted={{IsCompleted}}&Search={{Search}}&SortBy={{SortBy}}&SortDir={{SortDir}}&Page={{Page}}&PageSize={{PageSize}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"tasks"
					],
					"query": [
						{
							"key": "CategoryId",
							"value": "{{CategoryId}}"
						},
						{
							"key": "IsCompleted",
							"value": "{{IsCompleted}}"
						},
						{
							"key": "Search",
							"value": "{{Search}}"
						},
						{
							"key": "SortBy",
							"value": "{{SortBy}}"
						},
						{
							"key": "SortDir",
							"value": "{{SortDir}}"
						},
						{
							"key": "Page",
							"value": "{{Page}}"
						},
						{
							"key": "PageSize",
							"value": "{{PageSize}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar tarefa",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Status é 2xx', function () { pm.expect(pm.response.code).to.be.within(200, 299); });",
							"try {",
							"  var body = pm.response.json();",
							"  var id = body.id || body.Id;",
							"  if (id) pm.collectionVariables.set('taskId', String(id));",
							"} catch (e) {}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"userId\": \"{{userId}}\",\n  \"title\": \"Minha tarefa\",\n  \"description\": \"Descrição opcional\",\n  \"isCompleted\": false,\n  \"categoryId\": {{CategoryId}}\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/tasks",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"tasks"
					]
				},
				"description": "Cria tarefa do usuário autenticado."
			},
			"response": []
		},
		{
			"name": "Obter tarefa por Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Status é 200', function () { pm.response.to.have.status(200); });"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/tasks/{{taskId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar tarefa",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Status é 2xx/204', function () { pm.expect([200,204]).to.include(pm.response.code); });"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Minha tarefa (atualizada)\",\n  \"description\": \"Descrição atualizada\",\n  \"isCompleted\": true,\n  \"categoryId\": {{CategoryId}}\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/tasks/{{taskId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Excluir tarefa",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Status é 2xx/204', function () { pm.expect([200,204]).to.include(pm.response.code); });"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/tasks/{{taskId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"tasks",
						"{{taskId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar categorias",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/categories?Search={{Search}}&SortBy={{CatSortBy}}&SortDir={{CatSortDir}}&Page={{CatPage}}&PageSize={{CatPageSize}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"categories"
					],
					"query": [
						{
							"key": "Search",
							"value": "{{Search}}"
						},
						{
							"key": "SortBy",
							"value": "{{CatSortBy}}"
						},
						{
							"key": "SortDir",
							"value": "{{CatSortDir}}"
						},
						{
							"key": "Page",
							"value": "{{CatPage}}"
						},
						{
							"key": "PageSize",
							"value": "{{CatPageSize}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar categoria",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Categoria criada (2xx)', function () { pm.expect(pm.response.code).to.be.within(200, 299); });",
							"try {",
							"  var b = pm.response.json();",
							"  var cid = b.id || b.Id;",
							"  if (cid !== undefined && cid !== null) {",
							"    pm.collectionVariables.set('CategoryId', String(cid));",
							"  }",
							"} catch(e) {}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"Minha categoria\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obter categoria por Id",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/categories/{{CategoryId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"categories",
						"{{CategoryId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar categoria",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"Categoria atualizada\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/categories/{{CategoryId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"categories",
						"{{CategoryId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Excluir categoria",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/categories/{{CategoryId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"categories",
						"{{CategoryId}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5064"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "CategoryId",
			"value": "1"
		},
		{
			"key": "IsCompleted",
			"value": ""
		},
		{
			"key": "Search",
			"value": ""
		},
		{
			"key": "SortBy",
			"value": "updatedAt"
		},
		{
			"key": "SortDir",
			"value": "desc"
		},
		{
			"key": "Page",
			"value": "1"
		},
		{
			"key": "PageSize",
			"value": "20"
		},
		{
			"key": "taskId",
			"value": ""
		},
		{
			"key": "CatSortBy",
			"value": "id"
		},
		{
			"key": "CatSortDir",
			"value": "asc"
		},
		{
			"key": "CatPage",
			"value": "1"
		},
		{
			"key": "CatPageSize",
			"value": "50"
		}
	]
}